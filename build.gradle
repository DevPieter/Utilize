plugins {
    id 'fabric-loom'
    id 'com.replaymod.preprocess'
    id 'maven-publish'
}

def targetJavaVersion = 21

def isSnapshot = System.getenv('SNAPSHOT_BUILD')?.toBoolean() ?: false
def buildNumber = System.getenv('BUILD_NUMBER') ?: 'dev'

group = maven_group
archivesBaseName = archives_base_name
version = "${mod_version}+${minecraft_version}-${max_minecraft_version}" + (isSnapshot ? "-SNAPSHOT+${buildNumber}" : "")

repositories {
    repositories {
        maven {
            name "Pietr Space Releases"
            url "https://maven.pietr.space/releases"
        }
    }

    repositories {
        maven {
            name "Pietr Space Snapshots"
            url "https://maven.pietr.space/snapshots"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation "nl.devpieter:sees:1.2.0-dd2c322-SNAPSHOT"
    include "nl.devpieter:sees:1.2.0-dd2c322-SNAPSHOT"
}

preprocess {
    vars.put("MC", project.mcVersion)
    vars.put("FABRIC", 1)
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "max_minecraft_version", project.max_minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "max_minecraft_version": project.max_minecraft_version,
                "loader_version": project.loader_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(targetJavaVersion)
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    withSourcesJar()
    withJavadocJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = artifact_id
        }
    }
    repositories {
        maven {
            url = findProperty('mavenRepositoryUrl')
            credentials {
                username = findProperty('mavenRepositoryUsername')
                password = findProperty('mavenRepositoryPassword')
            }
        }
    }
}
